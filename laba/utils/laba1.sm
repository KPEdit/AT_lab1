%class Laba
%start LabaMap::Start
%map LabaMap
%%
Start {
  num
    Line {addC();}
}
Line {
  num
    Line {addC();}
  space
    PreTypeSpace {saveLine();}
}
PreTypeSpace {
  space
    PreTypeSpace {}
  char
    PreType {addC();}
}
PreType {
  char
    [ctxt.nameGuard()] nil {addC();}
  num
    [ctxt.nameGuard()] PreName {addC();}
  space
    [ctxt.typeGuard()] PreNameSpace {saveType();}
  asg
    [ctxt.nullGuard()] Error {stop();}
  end
    [ctxt.nullGuard()] Error {stop();}
  space
    PreAsgSpace {saveName();}
  asg
    ASG {saveName();}
  end
    OK {saveName();}
}
PreNameSpace {
  space
    PreNameSpace {}
  char
    PreName {addC();}
  asg
    ASG {}
}
PreName {
  end
    OK {saveName();}
  asg
    ASG {saveName();}
  char
    [ctxt.nameGuard()] PreName {addC();}
  num
    [ctxt.nameGuard()] PreName {addC();}
  space
    PreAsgSpace {saveName();}
}
PreAsgSpace {
  space
    PreAsgSpace {}
  asg
    ASG {}
}
ASG {
  space 
    PreVarSpace {}
  num
    VarNum {addC();}
  char
    [ctxt.nameGuard()] VarName {addC();}
}
PreVarSpace {
  space
    PreVarSpace {}
  char
    [ctxt.nameGuard()] VarName {addC();}
  num
    VarNum {addC();}
}
PreVar {
  num
    VarNum {addC();}
  char
    [ctxt.nameGuard()] VarName {addC();}
}
VarNum {
  num
    VarNum {addC();}
  end
    OK {}
}
VarName {
  num
    [ctxt.nameGuard()] VarName {addC();}
  char
    [ctxt.nameGuard()] VarName {addC();}
  end
    OK {}
}

OK {
}
Error {
  char
    Error {stop();}
  num
    Error {stop();}
  end
    Error {stop();}
  asg
    Error {stop();}
  space
    Error {stop();}

}
Default {
  char
    Error {stop();}
  num
    Error {stop();}
  end
    Error {stop();}
  asg
    Error {stop();}
  space
    Error {stop();}
}
%%